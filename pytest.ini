[tool:pytest]
# Pytest configuration file for PER Maritime Exam System

# Test directories
testpaths = tests

# Python files and functions to collect as tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version requirement
minversion = 6.0

# Default command line options
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=src
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80
    --asyncio-mode=auto

# Test markers
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that require database and/or Redis
    performance: Performance and load tests
    auth: Authentication and authorization tests
    cache: Cache-related tests
    slow: Tests that take more than 5 seconds to run
    skip_ci: Tests to skip in CI environment

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Async configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */conftest.py
    */__init__.py
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov